params {
    sample_sheet = null
    ref_fasta = null
    ref_kmers = null
    outdir = null
}

cleanup = true

process {
    withName: 'WINNOWMAP_ASM' {
        container = "community.wave.seqera.io/library/winnowmap:2.03--357291fe22bea99a"
        cpus = 8
        memory = 50.GB
        time = 1.d
    }
    withName: 'SAMTOOLS_SORT_INDEX' {
        container = "community.wave.seqera.io/library/samtools:1.21--0d76da7c3cf7751c"
        cpus = 8
        memory = 50.GB
        time = 1.d
    }
    withName: 'SVIMASM_DIPLOID' {
        container = "community.wave.seqera.io/library/svim-asm:1.0.3--acadbd0ea2c7b35b"
        cpus = 1
        memory = 50.GB
        time = 1.d
    }
    withName: 'BCFTOOLS_SORT_INDEX' {
        container = "community.wave.seqera.io/library/bcftools:1.21--4335bec1d7b44d11"
        cpus = 1
        memory = 10.GB
        time = 2.h
    }
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Capture Nextflow log files
timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline.html"
}
report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report.html"
}
trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_trace.txt"
}
dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_dag.svg"
}

profiles {
    debug {
        dumpHashes = true
        process.beforeScript = 'echo $HOSTNAME'
        cleanup = false
        nextflow.enable.configProcessNamesValidation = true
    }
    docker {
        docker.enabled = true
        singularity.enabled = false
        apptainer.enabled = false
        docker.runOptions = '-u $(id -u):$(id -g)'
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        docker.enabled = false
        apptainer.enabled = false
    }
    apptainer {
        apptainer.enabled = true
        apptainer.autoMounts = true
        docker.enabled = false
        singularity.enabled = false
    }
    mccleary {
        apptainer {
            enabled = true
            autoMounts = true
        }

        executor {
            name = 'slurm'
            queueSize = 50
            submitRateLimit = '200/60min'
        }

        process {
            resourceLimits = [
                cpus: 36,
                memory: 180.GB,
                time: 28.d
            ]
            executor = 'slurm'
            queue = 'pi_hall'
            clusterOptions = '--constraint=nogpu'
        }
    }
}
